{
  "apiVersion": "template.openshift.io/v1",
  "kind": "Template",
  "labels": {
    "service": "${SERVICE_NAME}"
  },
  "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/openshift/httpd-ex/blob/master/README.md.",
  "metadata": {
    "annotations": {
      "description": "An example Apache HTTP Server (httpd) application that serves static content. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/httpd-ex/blob/master/README.md.",
      "iconClass": "icon-apache",
      "openshift.io/display-name": "Apache HTTP Server",
      "openshift.io/documentation-url": "https://github.com/openshift/httpd-ex",
      "openshift.io/long-description": "This template defines resources needed to develop a static application served by Apache HTTP Server (httpd), including a build configuration and application deployment configuration.",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "openshift.io/support-url": "https://access.redhat.com",
      "tags": "quickstart,httpd",
      "template.openshift.io/bindable": "false"
    },
    "name": "infra-template"
  },
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "Keeps track of changes in the application image"
        },
        "name": "${SERVICE_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
                "kind": "ImageStreamTag",
                "name": "${VERSION}"
            },
            "importPolicy": {},
            "name": "latest",
            "referencePolicy": {
                "type": "Source"
            }
          },
          {
            "annotations": null,
            "importPolicy": {},
            "name": "${VERSION}",
            "referencePolicy": {
                "type": "Source"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "Keeps track of changes in the application image"
        },
        "labels": {
          "app": "${APIGW_NAME}"
        },
        "name": "${SERVICE_NAME}-${APIGW_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
                "kind": "ImageStreamTag",
                "name": "${TAG_APIGW}"
            },
            "importPolicy": {},
            "name": "latest",
            "referencePolicy": {
                "type": "Local"
            }
          },
          {
            "annotations": null,
            "from": {
                "kind": "DockerImage",
                "name": "${SERVICE_REPOSITORY}/${APIGW_NAME}:${TAG_APIGW}"
            },
            "importPolicy": {},
            "name": "${TAG_APIGW}",
            "referencePolicy": {
                "type": "Local"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "Keeps track of changes in the application image"
        },
        "labels": {
          "app": "${APP_DELIVERY_NAME}"
        },
        "name": "${SERVICE_NAME}-${APP_DELIVERY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
                "kind": "ImageStreamTag",
                "name": "${TAG_DELIVERY}"
            },
            "importPolicy": {},
            "name": "latest",
            "referencePolicy": {
                "type": "Local"
            }
          },
          {
            "annotations": null,
            "from": {
                "kind": "DockerImage",
                "name": "${SERVICE_REPOSITORY}/${APP_DELIVERY_NAME}:${TAG_DELIVERY}"
            },
            "importPolicy": {},
            "name": "${TAG_DELIVERY}",
            "referencePolicy": {
                "type": "Local"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "Keeps track of changes in the application image"
        },
        "labels": {
          "app": "${APP_SETUP_NAME}"
        },
        "name": "${SERVICE_NAME}-${APP_SETUP_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
                "kind": "ImageStreamTag",
                "name": "${TAG_SETUP}"
            },
            "importPolicy": {},
            "name": "latest",
            "referencePolicy": {
                "type": "Local"
            }
          },
          {
            "annotations": null,
            "from": {
                "kind": "DockerImage",
                "name": "${SERVICE_REPOSITORY}/${APP_SETUP_NAME}:${TAG_SETUP}"
            },
            "importPolicy": {},
            "name": "${TAG_SETUP}",
            "referencePolicy": {
                "type": "Local"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ImageStream",
      "metadata": {
        "annotations": {
          "description": "Keeps track of changes in the application image"
        },
        "labels": {
          "app": "${API_PROXY_NAME}"
        },
        "name": "${SERVICE_NAME}-${API_PROXY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        },
        "tags": [
          {
            "annotations": null,
            "from": {
                "kind": "ImageStreamTag",
                "name": "${TAG_API_PROXY}"
            },
            "importPolicy": {},
            "name": "latest",
            "referencePolicy": {
                "type": "Local"
            }
          },
          {
            "annotations": null,
            "from": {
                "kind": "DockerImage",
                "name": "${SERVICE_REPOSITORY}/${API_PROXY_NAME}:${TAG_API_PROXY}"
            },
            "importPolicy": {},
            "name": "${TAG_API_PROXY}",
            "referencePolicy": {
                "type": "Local"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "app": "${APIGW_NAME}"
        },
        "name": "${APIGW_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "ports": [
          {
            "name": "${APIGW_PORT}-tcp",
            "port": "${{APIGW_PORT}}",
            "targetPort": "${{APIGW_PORT}}"
          }
        ],
        "selector": {
          "name": "${APIGW_NAME}"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "app": "${APP_DELIVERY_NAME}"
        },
        "name": "${APP_DELIVERY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "ports": [
          {
            "name": "${APP_DELIVERY_PORT}-tcp",
            "port": "${{APP_DELIVERY_PORT}}",
            "targetPort": "${{APP_DELIVERY_PORT}}"
          }
        ],
        "selector": {
          "name": "${APP_DELIVERY_NAME}"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "app": "${APP_SETUP_NAME}"
        },
        "name": "${APP_SETUP_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "ports": [
          {
            "name": "${APP_SETUP_PORT}-tcp",
            "port": "${{APP_SETUP_PORT}}",
            "targetPort": "${{APP_SETUP_PORT}}"
          }
        ],
        "selector": {
          "name": "${APP_SETUP_NAME}"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "app": "${API_PROXY_NAME}"
        },
        "name": "${API_PROXY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "ports": [
          {
            "name": "${API_PROXY_PORT}-tcp",
            "port": "${{API_PROXY_PORT}}",
            "targetPort": "${{API_PROXY_PORT}}"
          }
        ],
        "selector": {
          "name": "${API_PROXY_NAME}"
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${APIGW_NAME}",
          "app.kubernetes.io/part-of": "${SERVICE_GROUP}",
          "app.openshift.io/runtime": "load-balancer"
        },
        "name": "${APIGW_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "replicas": 1,
        "revisionHistoryLimit": 2,
        "selector": {
          "name": "${APIGW_NAME}"
        },
        "strategy": {
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "${APIGW_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [],
                "image": " ",
                "name": "${APIGW_NAME}",
                "ports": [
                  {
                    "containerPort": "${{APIGW_PORT}}"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "32Mi"
                  }
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APIGW_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${SERVICE_NAME}-${APIGW_NAME}:latest"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${APP_DELIVERY_NAME}",
          "app.kubernetes.io/part-of": "${SERVICE_GROUP}",
          "app.openshift.io/runtime": "rails"
        },
        "name": "${APP_DELIVERY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "replicas": 1,
        "revisionHistoryLimit": 2,
        "selector": {
          "name": "${APP_DELIVERY_NAME}"
        },
        "strategy": {
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "${APP_DELIVERY_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "LOCATION_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "location_domain"
                      }
                    }
                  },
                  {
                    "name": "LOCATION_ADMIN_GROUP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "location_admin_group"
                      }
                    }
                  },
                  {
                    "name": "OCP_DOMAIN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "ocp_domain"
                      }
                    }
                  },
                  {
                    "name": "SSO_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "sso_url"
                      }
                    }
                  },
                  {
                    "name": "SSO_REALM",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "sso_realm"
                      }
                    }
                  },
                  {
                    "name": "SSO_CLIENT_ID",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "sso_client_id"
                      }
                    }
                  },
                  {
                    "name": "DNS_ACCOUNT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "dns_account"
                      }
                    }
                  },
                  {
                    "name": "DNS_SERVER",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "dns_server"
                      }
                    }
                  },
                  {
                    "name": "OPENSHIFT_SERVER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${APP_DELIVERY_NAME}",
                        "key": "OPENSHIFT_SERVER"
                      }
                    }
                  },
                  {
                    "name": "OPENSHIFT_TOKEN",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${APP_DELIVERY_NAME}",
                        "key": "OPENSHIFT_TOKEN"
                      }
                    }
                  },
                  {
                    "name": "GITHUB_ACCOUNT",
                    "value": "${GITHUB_ACCOUNT}"
                  },
                  {
                    "name": "GITHUB_REPO",
                    "value": "${GITHUB_REPO}"
                  },
                  {
                    "name": "GITHUB_REF",
                    "value": "${GITHUB_REF}"
                  },
                  {
                    "name": "GITHUB_USER_NAME",
                    "value": "${GITHUB_USER_NAME}"
                  },
                  {
                    "name": "GITHUB_USER_TOKEN",
                    "value": "${GITHUB_USER_TOKEN}"
                  },
                  {
                    "name": "NAMESPACE_PREFIX",
                    "value": "${NAMESPACE_PREFIX}"
                  }
                ],
                "image": " ",
                "name": "${APP_DELIVERY_NAME}",
                "ports": [
                  {
                    "containerPort": "${{APP_DELIVERY_PORT}}"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "256Mi"
                  }
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APP_DELIVERY_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${SERVICE_NAME}-${APP_DELIVERY_NAME}:latest"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${APP_SETUP_NAME}",
          "app.kubernetes.io/part-of": "${SERVICE_GROUP}",
          "app.openshift.io/runtime": "python"
        },
        "name": "${APP_SETUP_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "replicas": 1,
        "revisionHistoryLimit": 2,
        "selector": {
          "name": "${APP_SETUP_NAME}"
        },
        "strategy": {
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "${APP_SETUP_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [
                  {
                    "name": "LOCATION_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "location_name"
                      }
                    }
                  },
                  {
                    "name": "LOCATION_ADMIN_GROUP",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "location_admin_group"
                      }
                    }
                  },
                  {
                    "name": "SSO_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "sso_url"
                      }
                    }
                  },
                  {
                    "name": "SSO_REALM",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${ENV_LOC_NAME}",
                        "key": "sso_realm"
                      }
                    }
                  },
                  {
                    "name": "ANSIBLE_LOCAL_TEMP",
                    "value": "/tmp/ansible"
                  },
                  {
                    "name": "ANSIBLE_SSH_CONTROL_PATH_DIR",
                    "value": "/tmp/ansible/cp"
                  },
                  {
                    "name": "ANSIBLE_HOST_KEY_CHECKING",
                    "value": "False"
                  },
                  {
                    "name": "GUNICORN_CMD_ARGS",
                    "value": "${GUNICORN_CMD_ARGS}"
                  }
                ],
                "image": " ",
                "name": "${APP_SETUP_NAME}",
                "ports": [
                  {
                    "containerPort": "${{APP_SETUP_PORT}}"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "256Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "setup-conf",
                    "mountPath": "/opt/app/src/config.yaml",
                    "subPath": "config.yaml"
                  },
                  {
                    "name": "setup-ssh",
                    "mountPath": "/.ssh"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "setup-conf",
                "configMap": {
                  "name": "setup"
                }
              },
              {
                "name": "setup-ssh",
                "secret": {
                  "secretName": "setup-ssh"
                }
              }
            ]
          }
        },
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APP_SETUP_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${SERVICE_NAME}-${APP_SETUP_NAME}:latest"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "v1",
      "kind": "ConfigMap",
      "metadata": {
        "labels": {
          "app": "${API_PROXY_NAME}"
        },
        "name": "${API_PROXY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "data": {
        "default.conf": "server {\n  listen ${API_PROXY_PORT};\n  # internal OpenShift DNS, cache only for 10s\n  resolver dns-default.openshift-dns.svc.cluster.local valid=10s;\n\n  location /api/delivery {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-admin.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/setup {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-admin.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/billing_engine {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-billing.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/compute {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-networking.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/dns {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-networking.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/traefik_manager {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-networking.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n  location /api/wireguard {\n      set $target         http://apigw.${NAMESPACE_PREFIX}-networking.svc.cluster.local:8080;\n      proxy_pass          $target;\n      proxy_set_header    Host $host;\n  }\n\n}"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "DeploymentConfig",
      "metadata": {
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        },
        "labels": {
          "app": "${API_PROXY_NAME}",
          "app.kubernetes.io/part-of": "infra",
          "app.openshift.io/runtime": "nginx"
        },
        "name": "${API_PROXY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "replicas": 1,
        "revisionHistoryLimit": 2,
        "selector": {
          "name": "${API_PROXY_NAME}"
        },
        "strategy": {
          "type": "Rolling"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "${API_PROXY_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "env": [],
                "image": " ",
                "name": "${API_PROXY_NAME}",
                "ports": [
                  {
                    "containerPort": "${{API_PROXY_PORT}}"
                  }
                ],
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "64Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "32Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "mountPath": "/etc/nginx/conf.d",
                    "name": "${API_PROXY_NAME}-vol",
                    "readOnly": true
                  }
                ]
              }
            ],
            "volumes": [
              {
                "configMap": {
                  "defaultMode": 420,
                  "name": "${API_PROXY_NAME}"
                },
                "name": "${API_PROXY_NAME}-vol"
              }
            ]
          }
        },
        "triggers": [
          {
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${API_PROXY_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${SERVICE_NAME}-${API_PROXY_NAME}:latest"
              }
            },
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          }
        ]
      }
    },
    {
      "apiVersion": "route.openshift.io/v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "${API_PROXY_NAME}"
        },
        "name": "${API_PROXY_NAME}",
        "namespace": "${NAMESPACE}"
      },
      "spec": {
        "host": "${HOSTNAME_EXT_API}.${LOCATION_DOMAIN}",
        "port": {
          "targetPort": "${API_PROXY_PORT}-tcp"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${API_PROXY_NAME}",
          "weight": 100
        },
        "wildcardPolicy": "None"
      }
    }
  ],
  "parameters": [
    {
      "description": "The OpenShift Namespace where the ImageStream resides.",
      "displayName": "Namespace",
      "name": "NAMESPACE",
      "required": true,
      "value": null
    },
    {
      "description": "Service Group",
      "displayName": "Service Group",
      "name": "SERVICE_GROUP",
      "required": true,
      "value": "admin"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Service Name",
      "name": "SERVICE_NAME",
      "required": true,
      "value": "admin"
    },
    {
      "description": "The version assigned to all of the frontend objects defined in this template.",
      "displayName": "Version",
      "name": "VERSION",
      "required": true,
      "value": ""
    },
    {
      "description": "The version assigned to all of the frontend objects defined in this template.",
      "displayName": "Tag",
      "name": "TAG_APIGW",
      "required": true,
      "value": ""
    },
    {
      "description": "The version assigned to all of the frontend objects defined in this template.",
      "displayName": "Tag",
      "name": "TAG_DELIVERY",
      "required": true,
      "value": ""
    },
    {
      "description": "The version assigned to all of the frontend objects defined in this template.",
      "displayName": "Tag",
      "name": "TAG_SETUP",
      "required": true,
      "value": ""
    },
    {
      "description": "The version assigned to all of the frontend objects defined in this template.",
      "displayName": "Tag",
      "name": "TAG_API_PROXY",
      "required": true,
      "value": ""
    },
    {
      "description": "The exposed hostname that will route to the httpd service, if left blank a value will be defaulted.",
      "displayName": "Service Repository",
      "name": "SERVICE_REPOSITORY",
      "required": true,
      "value": "crw.icdc.io/demo-admin"
    },
    {
      "description": "LOCATION_DOMAIN",
      "displayName": "LOCATION_DOMAIN",
      "name": "LOCATION_DOMAIN",
      "required": true,
      "value": ""
    },
    {
      "name": "ENV_LOC_NAME",
      "required": true,
      "value": "env-loc"
    },
    {
      "description": "The exposed hostname that will route to the httpd service, if left blank a value will be defaulted.",
      "displayName": "Application Hostname",
      "name": "HOSTNAME_EXT_API",
      "required": true,
      "value": "api"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Name",
      "name": "APIGW_NAME",
      "required": true,
      "value": "apigw"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Name",
      "name": "APP_DELIVERY_NAME",
      "required": true,
      "value": "delivery"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Name",
      "name": "APP_SETUP_NAME",
      "required": true,
      "value": "setup"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Name",
      "name": "API_PROXY_NAME",
      "required": true,
      "value": "api-proxy"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Port",
      "name": "API_PROXY_PORT",
      "required": true,
      "value": "8080"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Port",
      "name": "APIGW_PORT",
      "required": true,
      "value": "8080"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Port",
      "name": "APP_DELIVERY_PORT",
      "required": true,
      "value": "3000"
    },
    {
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "displayName": "Application Port",
      "name": "APP_SETUP_PORT",
      "required": true,
      "value": "8080"
    },
    {
      "name": "GITHUB_ACCOUNT",
      "required": false
    },
    {
      "name": "GITHUB_REPO",
      "required": false
    },
    {
      "name": "GITHUB_REF",
      "required": false
    },
    {
      "name": "GITHUB_USER_NAME",
      "required": false
    },
    {
      "name": "GITHUB_USER_TOKEN",
      "required": false
    },
    {
      "name": "NAMESPACE_PREFIX",
      "required": false
    },
    {
      "description": "GUNICORN_CMD_ARGS",
      "displayName": "GUNICORN_CMD_ARGS",
      "name": "GUNICORN_CMD_ARGS",
      "required": true,
      "value": "--bind=0.0.0.0:8080 --timeout=70 --graceful-timeout 60"
    }
  ]
}
